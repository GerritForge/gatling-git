{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6cc430c5_35e61a08",
        "filename": "src/main/scala/com/github/barbasa/gatling/git/request/Request.scala",
        "patchSetId": 3
      },
      "lineNbr": 265,
      "author": {
        "id": 1015244
      },
      "writtenOn": "2024-06-04T09:34:33Z",
      "side": 1,
      "message": "Would it be difficult to add a test that runs two `push` commands, asserting that the results are not in a chain relation?",
      "revId": "bf0ff0bcb22fc008a1a24b011cfae797e38d471e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ef19ffe9_0cf0464c",
        "filename": "src/main/scala/com/github/barbasa/gatling/git/request/Request.scala",
        "patchSetId": 3
      },
      "lineNbr": 265,
      "author": {
        "id": 1020677
      },
      "writtenOn": "2024-06-04T09:39:56Z",
      "side": 1,
      "message": "I tried and I couldn\u0027t figure out a way of asserting the parent of the latest push. I believe we would need to split \"push\" to first prepare the commit(so we could inspect its parent in the test) and then a separate method that actually pushes it to the remote.\n\nCurrently we only return either success or failure, so there\u0027s no way of retrieving more information regarding the push.",
      "parentUuid": "6cc430c5_35e61a08",
      "revId": "bf0ff0bcb22fc008a1a24b011cfae797e38d471e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "12cc822e_6c3a4e0d",
        "filename": "src/main/scala/com/github/barbasa/gatling/git/request/Request.scala",
        "patchSetId": 3
      },
      "lineNbr": 265,
      "author": {
        "id": 1015244
      },
      "writtenOn": "2024-06-04T12:46:38Z",
      "side": 1,
      "message": "Addressed as a follow up",
      "parentUuid": "ef19ffe9_0cf0464c",
      "revId": "bf0ff0bcb22fc008a1a24b011cfae797e38d471e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d03a4599_78eaad26",
        "filename": "src/main/scala/com/github/barbasa/gatling/git/request/Request.scala",
        "patchSetId": 3
      },
      "lineNbr": 282,
      "author": {
        "id": 1015244
      },
      "writtenOn": "2024-06-04T09:34:33Z",
      "side": 1,
      "message": "This shouldn\u0027t always reset to `master` right? It should rather _reset_ to the value `refSpec` is pushing to,\n\nFor example, if this `push` is to `HEAD:refs/heads/foo`, we should reset to `origin/foo`.\n\nWDYT?",
      "range": {
        "startLine": 282,
        "startChar": 0,
        "endLine": 282,
        "endChar": 32
      },
      "revId": "bf0ff0bcb22fc008a1a24b011cfae797e38d471e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "798eb7a4_9713d2e0",
        "filename": "src/main/scala/com/github/barbasa/gatling/git/request/Request.scala",
        "patchSetId": 3
      },
      "lineNbr": 282,
      "author": {
        "id": 1020677
      },
      "writtenOn": "2024-06-04T09:39:56Z",
      "side": 1,
      "message": "Good question, I considered making this configurable, maybe we should.\n\nThe problem with using refSpec is that we pass `HEAD:refs/heads/foo`, if getting the ref we should reset to is as simple as taking everything after `refs/heads` then yeah, probably worth doing.",
      "parentUuid": "d03a4599_78eaad26",
      "range": {
        "startLine": 282,
        "startChar": 0,
        "endLine": 282,
        "endChar": 32
      },
      "revId": "bf0ff0bcb22fc008a1a24b011cfae797e38d471e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b3281013_1f9109b0",
        "filename": "src/main/scala/com/github/barbasa/gatling/git/request/Request.scala",
        "patchSetId": 3
      },
      "lineNbr": 282,
      "author": {
        "id": 1020677
      },
      "writtenOn": "2024-06-04T10:03:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "798eb7a4_9713d2e0",
      "range": {
        "startLine": 282,
        "startChar": 0,
        "endLine": 282,
        "endChar": 32
      },
      "revId": "bf0ff0bcb22fc008a1a24b011cfae797e38d471e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}