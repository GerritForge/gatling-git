{
  "comments": [
    {
      "key": {
        "uuid": "07262b7a_d4c94a50",
        "filename": "src/main/scala/com/github/barbasa/gatling/git/helper/CommitBuilder.scala",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1016501
      },
      "writtenOn": "2019-07-25T07:26:08Z",
      "side": 1,
      "message": "nit: line length",
      "revId": "cd5bd749614f14ea0dfc11829f82aa641c3b04a7",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c79ca993_80ed42a1",
        "filename": "src/main/scala/com/github/barbasa/gatling/git/helper/CommitBuilder.scala",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1015244
      },
      "writtenOn": "2019-07-25T09:24:56Z",
      "side": 1,
      "message": "I thought we use scalaformat now, which is a step that triggers just before compile time.\nIs that not the case?\n\nIf so, then this line is correctly formatted (for the current definition of \"correct\")",
      "parentUuid": "07262b7a_d4c94a50",
      "revId": "cd5bd749614f14ea0dfc11829f82aa641c3b04a7",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "608edd30_bfca39fa",
        "filename": "src/main/scala/com/github/barbasa/gatling/git/helper/CommitBuilder.scala",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1012541
      },
      "writtenOn": "2019-07-25T16:35:46Z",
      "side": 1,
      "message": "No we don\u0027t have it as a step in the compilation step. We should.\nAnyway, my bad I must have misconfigured my IDE which I usually use to format the code.",
      "parentUuid": "c79ca993_80ed42a1",
      "revId": "cd5bd749614f14ea0dfc11829f82aa641c3b04a7",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4fa949b2_15506991",
        "filename": "src/main/scala/com/github/barbasa/gatling/git/helper/CommitBuilder.scala",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1015244
      },
      "writtenOn": "2019-07-26T09:26:05Z",
      "side": 1,
      "message": "oh I don\u0027t know why I believed at some point we were talking about scalaformat :shrug:\nFair enought then :)",
      "parentUuid": "608edd30_bfca39fa",
      "revId": "cd5bd749614f14ea0dfc11829f82aa641c3b04a7",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f112800_48fa6ee9",
        "filename": "src/main/scala/com/github/barbasa/gatling/git/helper/CommitBuilder.scala",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1015244
      },
      "writtenOn": "2019-07-25T09:24:56Z",
      "side": 1,
      "message": "Any reason why we moved the arguments of createCommit() to the CommitBuilder constructor?\nWouldn\u0027t this limit the possibility to create different type of commits without requiring also the creation of different CommitBuilder objects?",
      "revId": "cd5bd749614f14ea0dfc11829f82aa641c3b04a7",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54261e9d_7a8bff62",
        "filename": "src/main/scala/com/github/barbasa/gatling/git/helper/CommitBuilder.scala",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1012541
      },
      "writtenOn": "2019-07-25T16:35:46Z",
      "side": 1,
      "message": "My idea was injecting a CommitBuilder per Push request, hence not having a singleton.\nThe reason is that I\u0027d like to build a scenario like this:\n\n- push to RepoA 3 files of max dimension between 3 and 5 bytes\n- push to RepoB 5 files of max dimension between 6 and 10 bytes\n....\n\nThat\u0027s why I was thinking of injecting every time a builder on the Push command with the \"shape\" of the commit(s) that will create. Of course a default will be provided.",
      "parentUuid": "5f112800_48fa6ee9",
      "revId": "cd5bd749614f14ea0dfc11829f82aa641c3b04a7",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "41f83c1e_417f0e00",
        "filename": "src/main/scala/com/github/barbasa/gatling/git/helper/CommitBuilder.scala",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1015244
      },
      "writtenOn": "2019-07-26T09:26:05Z",
      "side": 1,
      "message": "Where would you build these objects? Would that be in the feeder itself?\nPerhaps this would be clearer when I see it in action.\n\nBut fine, I understand the scope now, thanks.",
      "parentUuid": "54261e9d_7a8bff62",
      "revId": "cd5bd749614f14ea0dfc11829f82aa641c3b04a7",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1323f033_62052907",
        "filename": "src/main/scala/com/github/barbasa/gatling/git/request/Request.scala",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 1015244
      },
      "writtenOn": "2019-07-25T09:24:56Z",
      "side": 1,
      "message": "Didn\u0027t scalaformat pick up this one?",
      "revId": "cd5bd749614f14ea0dfc11829f82aa641c3b04a7",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8755e76a_6deb61e3",
        "filename": "src/main/scala/com/github/barbasa/gatling/git/request/Request.scala",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 1012541
      },
      "writtenOn": "2019-07-25T16:35:46Z",
      "side": 1,
      "message": "My bad...see other comment",
      "parentUuid": "1323f033_62052907",
      "revId": "cd5bd749614f14ea0dfc11829f82aa641c3b04a7",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "345102d9_1301cfdf",
        "filename": "src/main/scala/com/github/barbasa/gatling/git/request/Request.scala",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 1015244
      },
      "writtenOn": "2019-07-26T09:26:05Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "8755e76a_6deb61e3",
      "revId": "cd5bd749614f14ea0dfc11829f82aa641c3b04a7",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "966b0cb8_19896bc8",
        "filename": "src/main/scala/com/github/barbasa/gatling/git/request/Request.scala",
        "patchSetId": 1
      },
      "lineNbr": 189,
      "author": {
        "id": 1015244
      },
      "writtenOn": "2019-07-25T09:24:56Z",
      "side": 1,
      "message": "instead of passing Option with a default of None and then defining another default later on in the body,\nwhy don\u0027t we define a singleton DefaultCommitBuilder and change the signature as such:\n\ncase class Push(url: URIish, user: String, commitBuilder:CommitBuilder \u003d DefaultCommitBuilder)",
      "range": {
        "startLine": 189,
        "startChar": 43,
        "endLine": 189,
        "endChar": 91
      },
      "revId": "cd5bd749614f14ea0dfc11829f82aa641c3b04a7",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1904ebce_7d237159",
        "filename": "src/main/scala/com/github/barbasa/gatling/git/request/Request.scala",
        "patchSetId": 1
      },
      "lineNbr": 189,
      "author": {
        "id": 1012541
      },
      "writtenOn": "2019-07-25T16:35:46Z",
      "side": 1,
      "message": "See my comment in CommitBuilder.scala",
      "parentUuid": "966b0cb8_19896bc8",
      "range": {
        "startLine": 189,
        "startChar": 43,
        "endLine": 189,
        "endChar": 91
      },
      "revId": "cd5bd749614f14ea0dfc11829f82aa641c3b04a7",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d37b26fd_31496c7b",
        "filename": "src/main/scala/com/github/barbasa/gatling/git/request/Request.scala",
        "patchSetId": 1
      },
      "lineNbr": 189,
      "author": {
        "id": 1015244
      },
      "writtenOn": "2019-07-26T09:26:05Z",
      "side": 1,
      "message": "I understand your point above, but the defaultCommitBuilter can be a singleton and can be still passed directly instead of wrapping everything in an option no?",
      "parentUuid": "1904ebce_7d237159",
      "range": {
        "startLine": 189,
        "startChar": 43,
        "endLine": 189,
        "endChar": 91
      },
      "revId": "cd5bd749614f14ea0dfc11829f82aa641c3b04a7",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "faf3d287_302e163a",
        "filename": "src/main/scala/com/github/barbasa/gatling/git/request/Request.scala",
        "patchSetId": 1
      },
      "lineNbr": 189,
      "author": {
        "id": 1012541
      },
      "writtenOn": "2019-07-30T20:10:21Z",
      "side": 1,
      "message": "This is a way I was thinking of using it:\n\nval commitBuilder1 \u003d new CommitBuilder(repo,3,4,5, \"prefix\", Seq(\"directoryA\"))\nval commitBuilder2 \u003d new CommitBuilder(repo,6,3,6, \"prefix\", Seq(\"directoryB\",\"directoryC\"))\n\nval scn \u003d scenario(\"Owner plugin\")\n\t.exec(\n\t\tGit.clone(s\"https://${baseUrl}:29418/testing/owners_plugin\"),\n\t\tPush(new URIish(\"https://${baseUrl}:29418/testing/owners_plugin\"), \"ciccio\", commitBuilder1).send,\n\t\tPush(new URIish(\"https://${baseUrl}:29418/testing/owners_plugin\"), \"ciccio\", commitBuilder2).send\n\t)\n\nFor this reason I don\u0027t think CommitBuilder can be a singleton. Did you have something else in mind?",
      "parentUuid": "d37b26fd_31496c7b",
      "range": {
        "startLine": 189,
        "startChar": 43,
        "endLine": 189,
        "endChar": 91
      },
      "revId": "cd5bd749614f14ea0dfc11829f82aa641c3b04a7",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3be1b23_efad834c",
        "filename": "src/main/scala/com/github/barbasa/gatling/git/request/Request.scala",
        "patchSetId": 1
      },
      "lineNbr": 189,
      "author": {
        "id": 1015244
      },
      "writtenOn": "2019-08-02T19:37:56Z",
      "side": 1,
      "message": "I was not suggesting that CommitBuilder should be a singleton, but that we have a singleton DefaultCommitBuilder, which at the moment is defined as a val and it is defaulted to if the option is None.\n\nYour example:\n...\nval commitBuilder2 \u003d new CommitBuilder(repo,6,3,6, \"prefix\", Seq(\"directoryB\",\"directoryC\"))\n...\nPush(new URIish(\"https://${baseUrl}:29418/testing/owners_plugin\"), \"ciccio\", commitBuilder2).send\n...\n\nDoes not match your method\u0027s interface because Push gets an Option, not a commitBuilder\n\nHope it makes sense",
      "parentUuid": "faf3d287_302e163a",
      "range": {
        "startLine": 189,
        "startChar": 43,
        "endLine": 189,
        "endChar": 91
      },
      "revId": "cd5bd749614f14ea0dfc11829f82aa641c3b04a7",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7953fd0_a8f8134a",
        "filename": "src/main/scala/com/github/barbasa/gatling/git/request/Request.scala",
        "patchSetId": 1
      },
      "lineNbr": 189,
      "author": {
        "id": 1012541
      },
      "writtenOn": "2019-08-05T16:39:52Z",
      "side": 1,
      "message": "Have a look at the last patch set. Is that what you meant?",
      "parentUuid": "f3be1b23_efad834c",
      "range": {
        "startLine": 189,
        "startChar": 43,
        "endLine": 189,
        "endChar": 91
      },
      "revId": "cd5bd749614f14ea0dfc11829f82aa641c3b04a7",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}